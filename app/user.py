from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext

from app.generate import ai_generate

user = Router()


class Gen(StatesGroup):
    wait = State()


@user.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! ü§ñ –Ø —Ç–≤–æ–π –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫. –ì–æ—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?"
    )


@user.message(Gen.wait)
async def stop_flood(message: Message):
    await message.answer("–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –≤–∞—à –∑–∞–ø—Ä–æ—Å –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è.")


@user.message()
async def generating(message: Message, state: FSMContext):
    await state.set_state(Gen.wait)
    response = await ai_generate(message.text)
    await message.answer(response)
    await state.clear()
